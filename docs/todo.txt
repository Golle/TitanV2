



# UI 
## Layouts
    [ ] Add panels, similar to Stack and Horizontal panels in WPF. 

## 9-Patch Sprite
    [X] Implement a naive rendering and processing for 9-patch sprites
    [ ] Rework 9 patch to a more minimalistic structure, and reduce number of elements needed to be rendered.
    [ ] Implement a converter for processing so we can use the format  [left, top, right, bottom] instead of a json object.

## Improvements
    [ ] Add Font Scaling, right now the font is the same size as it's been printed to the spritesheet.
        [ ] SDF fonts, this is a stretch and a long term goal for crisp text.


# Asset Processor
The asset processor is currently just a command line tool that will walk through all assets in a folder and put them into a single binary, based on some configuration in the metadata files.   
The long term goal is to have a hot reload system, that can detect changes and create reloadable files that the engine can consume in debug builds. 

# Hot Reload

## Asset Processor
    [X] Rework compilation step into multiple steps.
        [X] Create and validate metadata files.
        [X] Process assets and create AssetDescriptors
        [X] Write assets in the format engine can consume to a binary folder
        [X] For release builds, combine all these into a single file (per registry)

## Engine Runtime
    [X] Load data from files intead of combined registry when HotReload is enabled(only possible in debug builds)
    [X] Implement support for "polling" files for changes. (Using a FileWatcher that is removed for Release builds)
    [X] Reload assets, load a new one and swap with old.
    [ ] Implement hot reload for all/most loaders. or the ones that make sense.
    [ ] Add support for updated descriptors. Make sure its thread safe.
        - This is to support changing coordinates in a sprite sheet for example. 



